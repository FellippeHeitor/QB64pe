qbs *_SUB_IDEDRAWOBJ_STRING1_SEP=NULL;
if(_SUB_IDEDRAWOBJ_STRING1_SEP==NULL){
_SUB_IDEDRAWOBJ_STRING1_SEP=qbs_new_fixed((uint8*)mem_static_malloc(1),1,0);
memset(_SUB_IDEDRAWOBJ_STRING1_SEP->chr,0,1);
}
int32 *_SUB_IDEDRAWOBJ_LONG_X=NULL;
if(_SUB_IDEDRAWOBJ_LONG_X==NULL){
_SUB_IDEDRAWOBJ_LONG_X=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_X=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_Y=NULL;
if(_SUB_IDEDRAWOBJ_LONG_Y==NULL){
_SUB_IDEDRAWOBJ_LONG_Y=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_Y=0;
}
qbs *_SUB_IDEDRAWOBJ_STRING_A=NULL;
if (!_SUB_IDEDRAWOBJ_STRING_A)_SUB_IDEDRAWOBJ_STRING_A=qbs_new(0,0);
int32 *_SUB_IDEDRAWOBJ_LONG_X2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_X2==NULL){
_SUB_IDEDRAWOBJ_LONG_X2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_X2=0;
}
int32 pass5295;
int32 pass5296;
int32 pass5297;
byte_element_struct *byte_element_5298=NULL;
if (!byte_element_5298){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5298=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5298=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5299=NULL;
if (!byte_element_5299){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5299=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5299=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_CX=NULL;
if(_SUB_IDEDRAWOBJ_LONG_CX==NULL){
_SUB_IDEDRAWOBJ_LONG_CX=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_CX=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_TX=NULL;
if(_SUB_IDEDRAWOBJ_LONG_TX==NULL){
_SUB_IDEDRAWOBJ_LONG_TX=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_TX=0;
}
byte_element_struct *byte_element_5300=NULL;
if (!byte_element_5300){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5300=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5300=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_SX1=NULL;
if(_SUB_IDEDRAWOBJ_LONG_SX1==NULL){
_SUB_IDEDRAWOBJ_LONG_SX1=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_SX1=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_SX2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_SX2==NULL){
_SUB_IDEDRAWOBJ_LONG_SX2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_SX2=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_COLORCHAR=NULL;
if(_SUB_IDEDRAWOBJ_LONG_COLORCHAR==NULL){
_SUB_IDEDRAWOBJ_LONG_COLORCHAR=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_COLORCHAR=0;
}
int64 fornext_value5302;
int64 fornext_finalvalue5302;
int64 fornext_step5302;
uint8 fornext_step_negative5302;
byte_element_struct *byte_element_5303=NULL;
if (!byte_element_5303){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5303=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5303=(byte_element_struct*)mem_static_malloc(12);
}
int32 pass5304;
int32 pass5305;
int32 *_SUB_IDEDRAWOBJ_LONG_W=NULL;
if(_SUB_IDEDRAWOBJ_LONG_W==NULL){
_SUB_IDEDRAWOBJ_LONG_W=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_W=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_M=NULL;
if(_SUB_IDEDRAWOBJ_LONG_M==NULL){
_SUB_IDEDRAWOBJ_LONG_M=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_M=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_S=NULL;
if(_SUB_IDEDRAWOBJ_LONG_S==NULL){
_SUB_IDEDRAWOBJ_LONG_S=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_S=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_N=NULL;
if(_SUB_IDEDRAWOBJ_LONG_N==NULL){
_SUB_IDEDRAWOBJ_LONG_N=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_N=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_V1=NULL;
if(_SUB_IDEDRAWOBJ_LONG_V1==NULL){
_SUB_IDEDRAWOBJ_LONG_V1=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_V1=0;
}
qbs *_SUB_IDEDRAWOBJ_STRING_A3=NULL;
if (!_SUB_IDEDRAWOBJ_STRING_A3)_SUB_IDEDRAWOBJ_STRING_A3=qbs_new(0,0);
int32 *_SUB_IDEDRAWOBJ_LONG_I2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_I2==NULL){
_SUB_IDEDRAWOBJ_LONG_I2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_I2=0;
}
int64 fornext_value5307;
int64 fornext_finalvalue5307;
int64 fornext_step5307;
uint8 fornext_step_negative5307;
byte_element_struct *byte_element_5308=NULL;
if (!byte_element_5308){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5308=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5308=(byte_element_struct*)mem_static_malloc(12);
}
qbs *_SUB_IDEDRAWOBJ_STRING_A2=NULL;
if (!_SUB_IDEDRAWOBJ_STRING_A2)_SUB_IDEDRAWOBJ_STRING_A2=qbs_new(0,0);
byte_element_struct *byte_element_5309=NULL;
if (!byte_element_5309){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5309=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5309=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_CHARACTER=NULL;
if(_SUB_IDEDRAWOBJ_LONG_CHARACTER==NULL){
_SUB_IDEDRAWOBJ_LONG_CHARACTER=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_CHARACTER=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_RIGHTSIDELIMIT=NULL;
if(_SUB_IDEDRAWOBJ_LONG_RIGHTSIDELIMIT==NULL){
_SUB_IDEDRAWOBJ_LONG_RIGHTSIDELIMIT=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_RIGHTSIDELIMIT=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_CF=NULL;
if(_SUB_IDEDRAWOBJ_LONG_CF==NULL){
_SUB_IDEDRAWOBJ_LONG_CF=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_CF=0;
}
byte_element_struct *byte_element_5311=NULL;
if (!byte_element_5311){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5311=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5311=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5313=NULL;
if (!byte_element_5313){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5313=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5313=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5314=NULL;
if (!byte_element_5314){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5314=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5314=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5317=NULL;
if (!byte_element_5317){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5317=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5317=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5319=NULL;
if (!byte_element_5319){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5319=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5319=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_TNUM=NULL;
if(_SUB_IDEDRAWOBJ_LONG_TNUM==NULL){
_SUB_IDEDRAWOBJ_LONG_TNUM=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_TNUM=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_TSEL=NULL;
if(_SUB_IDEDRAWOBJ_LONG_TSEL==NULL){
_SUB_IDEDRAWOBJ_LONG_TSEL=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_TSEL=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_Q=NULL;
if(_SUB_IDEDRAWOBJ_LONG_Q==NULL){
_SUB_IDEDRAWOBJ_LONG_Q=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_Q=0;
}
int32 pass5323;
int32 pass5324;
int32 *_SUB_IDEDRAWOBJ_LONG_C=NULL;
if(_SUB_IDEDRAWOBJ_LONG_C==NULL){
_SUB_IDEDRAWOBJ_LONG_C=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_C=0;
}
int64 fornext_value5326;
int64 fornext_finalvalue5326;
int64 fornext_step5326;
uint8 fornext_step_negative5326;
byte_element_struct *byte_element_5327=NULL;
if (!byte_element_5327){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5327=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5327=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_WHITESPACE=NULL;
if(_SUB_IDEDRAWOBJ_LONG_WHITESPACE==NULL){
_SUB_IDEDRAWOBJ_LONG_WHITESPACE=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_WHITESPACE=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_SPACING=NULL;
if(_SUB_IDEDRAWOBJ_LONG_SPACING==NULL){
_SUB_IDEDRAWOBJ_LONG_SPACING=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_SPACING=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_F2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_F2==NULL){
_SUB_IDEDRAWOBJ_LONG_F2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_F2=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_N2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_N2==NULL){
_SUB_IDEDRAWOBJ_LONG_N2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_N2=0;
}
int64 fornext_value5329;
int64 fornext_finalvalue5329;
int64 fornext_step5329;
uint8 fornext_step_negative5329;
byte_element_struct *byte_element_5330=NULL;
if (!byte_element_5330){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5330=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5330=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5331=NULL;
if (!byte_element_5331){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5331=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5331=(byte_element_struct*)mem_static_malloc(12);
}
